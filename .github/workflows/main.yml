name: Test, Coverage, Build, and Push Docker

on:
  push:
    branches:
      - main

jobs:
  test-coverage-build:
    name: Run Tests, Generate Coverage, Build, and Push Docker
    runs-on: ubuntu-latest
    environment: build  # Assign this job to the "build" environment

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Run Tests and Generate JaCoCo Coverage
      - name: Run Tests with JaCoCo
        run: |
          mvn clean verify

      # Step 4: Upload JaCoCo Coverage Report
      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco/

      # Step 5: Build the Application
      - name: Build Application
        run: |
          mvn clean package
          ls -l target/

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 7: Upload Build Artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cloud-libra-jar
          path: target/cloud-libra-1.0-SNAPSHOT.jar

      # Step 8: Build and Push Docker Image
      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/cloud-libra:latest .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/cloud-libra:latest ${{ secrets.DOCKERHUB_USERNAME }}/cloud-libra:${{ github.sha }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/cloud-libra:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/cloud-libra:${{ github.sha }}
